package com.basic.backend.push.support.enums;

import lombok.AllArgsConstructor;
import lombok.Getter;

/**
 * 异常信息枚举类
 * 
 * @author Field
 */
@Getter
@AllArgsConstructor
public enum ExceptionEnum {

	新增记录ID必须为空(20180901, "新增记录ID必须为空！"),

	编辑记录ID不能为空(20180902, "编辑记录ID不能为空！"),

	删除记录ID不能为空(20180903, "删除记录ID不能为空！"),

	应用已存在(20180101, "应用已存在"),

	应用不存在(20180102, "应用不存在"),

	应用已被禁用(20180103, "应用已被禁用(如需启用,请查询后点击启用按钮)"),

	用户已存在(20180111, "用户名已经存在"),

	用户不存在(20180112, "用户不存在"),

	用户已被禁用(20180113, "用户已被禁用"),

	用户状态无效(20180116, "用户状态无效(未被审核通过)"),
	
	用户邮箱已存在(20180117, "用户邮箱已存在"),
	
	用户已被锁(20180114, "用户状态无效"),

	禁止修改系统管理员(20180115, "禁止修改系统管理员"),

	菜单已存在(20180121, "菜单已存在"),

	菜单不存在(20180122, "菜单不存在"),

	菜单已被禁用(20180123, "菜单已被禁用"),

	父级菜单不能为空(20180124, "父级菜单不能为空"),

	父级菜单不存在(20180125, "父级菜单不存在"),

	菜单类型不合法(20180126, "菜单类型不合法"),

	应用代码不能为空(20180127, "应用代码不能为空"),

	角色已存在(20180131, "角色已存在"),

	角色不存在(20180132, "角色不存在"),

	角色已被禁用(20180133, "角色已被禁用(如需启用,请查询后点击启用按钮)"),
	
	角色下存在用户绑定信息不可删除(20180134, "角色下存在用户关联信息,不可删除"),

	角色用户关系已存在(20180135, "角色用户关系已存在"),

	角色用户关系不存在(20180136, "角色用户关系不存在"),

	角色用户关系已被禁用(20180137, "角色用户关系已被禁用"),

	管理员角色不允许被删除(20180138, "管理员角色不允许被删除"),
	
	管理员角色不允许被修改(20180138, "管理员角色不允许被修改"),
	
	组已被禁用(20180151, "组已被禁用(如需启用,请查询后点击启用按钮)"),

	组已存在(20180152, "组已存在"),

	组不存在(20180153, "组已存在"),

	访问权限不存在(20180161, "访问权限不存在"),

	访问权限已存在(20180162, "访问权限已存在"),

	操作权限不存在(20180171, "操作权限不存在"),

	操作权限已存在(20180172, "操作权限已存在"),

	修改请求缺少必要参数(20180404, "角色修改请求缺少必要参数"),

	会话已失效(20180004, "会话已失效"),

	验证码已失效(20180004, "验证码已失效,请刷新后重试"),

	验证码错误(20180005, "验证码错误"),

	账号或密码不正确(20180005, "账号或密码不正确"),

	账号已被锁定(20180005, "账号已被锁定,请联系管理员"),

	登陆验证失败(20180005, "登陆验证失败,请联系管理员"),

	用户未登陆(20180005, "用户未登陆"),

	原密码不正确(20180005, "原密码不正确"),

	状态不合法(20180201, "状态不合法"),

	前端JS加载异常(20180901, "前端JS加载异常"),

	;

	private int code;
	private String desc;

	/**
	 * 根据code获取描述信息
	 */
	public static String getDescByCode(int code) {
		for (ExceptionEnum value : ExceptionEnum.values()) {
			if (value.getCode() == code) {
				return value.getDesc();
			}
		}
		return String.valueOf(code);
	}
}
